name: ARMv8 Plus OpenWrt
on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: configs/armv8-plus.config
  DIY_SCRIPT: diy-script.sh
  CLASH_KERNEL: arm64
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: ROOTFS_PLUS
  OPENWRT_RELEASE: true
  OPENWRT_TAG: ARMv8_PLUS
  TZ: Asia/Shanghai

jobs:
  Check-Server-Performance:
    runs-on: ubuntu-22.04
    steps:
      - name: Check Server Performance
        run: |
          echo "警告⚠" > server_performance.txt
          echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！" >> server_performance.txt
          echo -e "已知CPU型号(降序): 7763，8370C，8272CL，8171M，E5-2673\\n" >> server_performance.txt
          echo "--------------------------CPU信息--------------------------" >> server_performance.txt
          echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)" >> server_performance.txt
          echo "CPU核心数量: $(nproc)" >> server_performance.txt
          echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\\n" >> server_performance.txt
          echo "--------------------------内存信息--------------------------" >> server_performance.txt
          echo "已安装内存详细信息:" >> server_performance.txt
          echo -e "$(sudo lshw -short -C memory | grep GiB)\\n" >> server_performance.txt
          echo "--------------------------硬盘信息--------------------------" >> server_performance.txt
          echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT >> server_performance.txt
      - name: Upload Server Performance Artifact
        uses: actions/upload-artifact@v2
        with:
          name: server-performance
          path: server_performance.txt

  Initialization-Environment:
    runs-on: ubuntu-22.04
    needs: Check-Server-Performance
    steps:
      - name: Download Server Performance Artifact
        uses: actions/download-artifact@v2
        with:
          name: server-performance
          path: .
      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          cat server_performance.txt
          docker rmi $(docker images -q)
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y update

  Package-OpenWrt-Firmware:
    runs-on: ubuntu-22.04
    needs: Initialization-Environment
    steps:
      - name: Package OpenWrt Firmware
        if: steps.download.outputs.status == 'success'
        uses: ophub/flippy-openwrt-actions@main
        env:
          OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*rootfs.tar.gz
          PACKAGE_SOC: all
          WHOAMI: Haiibo
          KERNEL_VERSION_NAME: 5.15.13_6.1.5
          KERNEL_AUTO_LATEST: true
          DISTRIB_REVISION: 'R${{ env.DATE1 }} by Haiibo'

  Upload-OpenWrt-To-Artifact:
    runs-on: ubuntu-22.04
    needs: Package-OpenWrt-Firmware
    steps:
      - name: Upload OpenWrt To Artifact
        if: env.PACKAGED_STATUS == 'success' && env.OPENWRT_RELEASE != 'true'
        uses: kittaakos/upload-artifact-as-is@master
        with:
          path: ${{ env.PACKAGED_OUTPUTPATH }}

  Upload-OpenWrt-To-Release:
    runs-on: ubuntu-22.04
    needs: Upload-OpenWrt-To-Artifact
    steps:
      - name: Upload OpenWrt To Release
        if: env.PACKAGED_STATUS == 'success' && env.OPENWRT_RELEASE == 'true'
        uses: ncipollo/release-action@v1
        with:
          name: 'R${{ env.DATE }} for ${{ env.OPENWRT_TAG }}'
          allowUpdates: true
          removeArtifacts: true
          tag: ${{ env.OPENWRT_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          body: |
            **This is OpenWrt Firmware for Armvirt 64**
            ### 📒 固件信息
            - 🚀 ARMv8 多功能版，集成插件多适合折腾
            - 💻 平台架构: ${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
            - ⚽ 固件源码: ${{ env.REPO_URL }}
            - 💝 源码分支: ${{ env.REPO_BRANCH }}
            - 🌐 默认地址: 192.168.1.1
            - 🔑 默认密码: password
            ### 🍻 安装与更新
            - 用插件安装: 系统 → 晶晨宝盒 → 安装 OpenWrt → 选择型号 → 安装
            - 用命令安装: U盘启动成功后输入命令 `openwrt-install-amlogic` 按照英文提示写入到 emmc
            - 用插件更新: 系统 → 晶晨宝盒 → 在线下载更新 → 完整更新全系统
            - 用命令更新: 上传固件到 `/mnt/mmcblk2p4` 目录，输入命令 `openwrt-update-amlogic` 即可更新
            - 注意: 如非 `amlogic` 平台，请将其更改为对应平台 `rockchip` `allwinner`
            - 部分常见问题及注意事项请参考恩山论坛F大➦[最新帖](https://www.right.com.cn/forum/thread-4076037-1-1.html)
            ### 🧊 固件版本
            - 固件编译前最后一次➦[主源码](${{ env.REPO_URL }})更新记录
            - ${{ env.COMMIT_AUTHOR }}
            - ${{ env.COMMIT_DATE }}
            - ${{ env.COMMIT_MESSAGE }}
            - ${{ env.COMMIT_HASH }}
